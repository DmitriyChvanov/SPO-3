{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\onegl\\\\OneDrive\\\\\\u0420\\u0430\\u0431\\u043E\\u0447\\u0438\\u0439 \\u0441\\u0442\\u043E\\u043B\\\\SPO3\\\\client\\\\src\\\\pages\\\\AuthPage\\\\AuthPage.jsx\",\n  _s = $RefreshSig$();\nimport React, { useContext, useState } from 'react';\nimport { NavLink, useLocation, useNavigate } from 'react-router-dom';\nimport { LOGIN_ROUTE, REGISTARTION_ROUTE, SHOP_ROUTE } from '../utils/consts';\nimport { login, registartion } from '../http/userAPI';\nimport { observer } from 'mobx-react-lite';\nimport { Context } from '..';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthPage = _s(observer(_c = _s(() => {\n  _s();\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const handleSubmit = e => {\n    e.preventDefault();\n  };\n  const {\n    user\n  } = useContext(Context);\n  const location = useLocation();\n  const isLogin = location.pathname == LOGIN_ROUTE;\n  const navigate = useNavigate();\n  const auth = async () => {\n    try {\n      let data;\n      if (isLogin) {\n        data = await login(email, password);\n      } else {\n        data = await registartion(email, password);\n      }\n      user.setUser(user);\n      user.setIsAuth(true);\n      navigate(SHOP_ROUTE);\n    } catch (e) {\n      alert(e.response.data.message);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    className: styles.form,\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: styles.title,\n      children: isLogin ? 'Авторизация' : 'Регистрация'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"email\",\n      name: \"email\",\n      placeholder: \"Email\",\n      value: email,\n      onChange: e => setEmail(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"password\",\n      name: \"password\",\n      placeholder: \"Password\",\n      value: password,\n      onChange: e => setPassword(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), isLogin ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.question_box,\n      children: /*#__PURE__*/_jsxDEV(NavLink, {\n        to: REGISTARTION_ROUTE,\n        className: styles.question,\n        children: \"\\u041D\\u0435\\u0442 \\u0430\\u043A\\u043A\\u0430\\u0443\\u043D\\u0442\\u0430?\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.question_box,\n      children: /*#__PURE__*/_jsxDEV(NavLink, {\n        to: LOGIN_ROUTE,\n        className: styles.question,\n        children: \"\\u0415\\u0441\\u0442\\u044C \\u0430\\u043A\\u043A\\u0430\\u0443\\u043D\\u0442?\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      className: styles.submit,\n      onClick: auth,\n      children: isLogin ? 'Войти' : 'Зарегистрироваться'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n}, \"8SBujld0bdmnHDWoNKlmscn8pZs=\", false, function () {\n  return [useLocation, useNavigate];\n})), \"8SBujld0bdmnHDWoNKlmscn8pZs=\", false, function () {\n  return [useLocation, useNavigate];\n});\n_c2 = AuthPage;\nexport default AuthPage;\nvar _c, _c2;\n$RefreshReg$(_c, \"AuthPage$observer\");\n$RefreshReg$(_c2, \"AuthPage\");","map":{"version":3,"names":["React","useContext","useState","NavLink","useLocation","useNavigate","LOGIN_ROUTE","REGISTARTION_ROUTE","SHOP_ROUTE","login","registartion","observer","Context","jsxDEV","_jsxDEV","AuthPage","_s","_c","email","setEmail","password","setPassword","handleSubmit","e","preventDefault","user","location","isLogin","pathname","navigate","auth","data","setUser","setIsAuth","alert","response","message","className","styles","form","onSubmit","children","title","fileName","_jsxFileName","lineNumber","columnNumber","type","name","placeholder","value","onChange","target","question_box","to","question","submit","onClick","_c2","$RefreshReg$"],"sources":["C:/Users/onegl/OneDrive/Рабочий стол/SPO3/client/src/pages/AuthPage/AuthPage.jsx"],"sourcesContent":["import React, { useContext, useState } from 'react';\r\nimport { NavLink, useLocation, useNavigate } from 'react-router-dom';\r\nimport { LOGIN_ROUTE, REGISTARTION_ROUTE, SHOP_ROUTE } from '../utils/consts';\r\nimport { login, registartion } from '../http/userAPI';\r\nimport { observer } from 'mobx-react-lite';\r\nimport { Context } from '..';\r\n\r\nconst AuthPage = observer(() => {\r\n const [email, setEmail] = useState('');\r\n const [password, setPassword] = useState('');\r\n const handleSubmit = (e) => {\r\n    e.preventDefault();   \r\n};\r\n    const {user} = useContext(Context)\r\n    const location = useLocation()\r\n    const isLogin = location.pathname == LOGIN_ROUTE\r\n    const navigate = useNavigate()\r\n    const auth = async () => {\r\n      try {\r\n          let data;\r\n          if (isLogin) {\r\n            data= await login(email, password) \r\n          } else {\r\n            data= await registartion(email, password)\r\n          }\r\n        user.setUser(user)\r\n        user.setIsAuth(true)\r\n        navigate(SHOP_ROUTE)\r\n      } catch (e) {\r\n        alert(e.response.data.message)\r\n      }\r\n    }\r\n\r\n return (\r\n    <form className={styles.form} onSubmit={handleSubmit}>\r\n      <h2 className={styles.title}>{isLogin ? 'Авторизация' : 'Регистрация'}</h2>\r\n      <input\r\n        type=\"email\"\r\n        name=\"email\"\r\n        placeholder=\"Email\"\r\n        value={email}\r\n        onChange={(e) => setEmail(e.target.value)}\r\n      />\r\n      <input\r\n        type=\"password\"\r\n        name=\"password\"\r\n        placeholder=\"Password\"\r\n        value={password}\r\n        onChange={(e) => setPassword(e.target.value)}\r\n      />\r\n      {isLogin\r\n       \r\n        ?\r\n       \r\n        <div className={styles.question_box}>\r\n            <NavLink to={REGISTARTION_ROUTE} className={styles.question}>Нет аккаунта?</NavLink>\r\n        </div>\r\n        \r\n        :\r\n\r\n        <div className={styles.question_box}>\r\n            <NavLink to={LOGIN_ROUTE} className={styles.question}>Есть аккаунт?</NavLink>\r\n        </div>\r\n      }\r\n      <button type=\"submit\" className={styles.submit} onClick={auth}>\r\n        {isLogin ? 'Войти' : 'Зарегистрироваться'}\r\n      </button>\r\n    </form>\r\n );\r\n});\r\n\r\nexport default AuthPage;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}